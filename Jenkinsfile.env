    pipeline {
        agent any 
        stages {
            stage('Checkout') {
                steps {
                    git 'https://github.com/ImamGigGig0/ServiceForStudy01.git'
                }
            }
            stage('Test') {
                steps {
                    sh 'mvn clean test' // Запуск тестов
                }
            }
            stage('Build') {
                steps {
                    sh 'mvn clean package' // Сборка артефакта (jar/war)
                }
            }
            stage('Docker Build') {
                steps {
                    script {
                        // Получаем имя артефакта
                        def artifactName = sh(script: 'ls target/*.jar | head -n 1', returnStdout: true).trim()
                        // Создаем docker-образ
                        sh "docker build -t YOUR_DOCKERHUB_USERNAME/service-for-study01:latest ."
                    }
                }
            }
            stage('Docker Push') {
                steps {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh "docker login -u ${USERNAME} -p ${PASSWORD}"
                        sh "docker push YOUR_DOCKERHUB_USERNAME/service-for-study01:latest"
                    }
                }
            }
            stage('Docker Run') {
                steps {
                    sh 'docker pull YOUR_DOCKERHUB_USERNAME/service-for-study01:latest'
                    sh 'docker stop service-for-study01 || true' // Останавливаем контейнер, если он уже запущен
                    sh 'docker rm service-for-study01 || true'   // Удаляем контейнер, если он уже существует
                    sh 'docker run -d -p 8080:8080 --name service-for-study01 YOUR_DOCKERHUB_USERNAME/service-for-study01:latest' // Запускаем контейнер
                }
            }
        }
    }
